package work;

public class Time implements Cloneable, Comparable < Time > {

  private long elapsedTime;

  public Time() {
    elapsedTime = System.currentTimeMillis() / 1000;
  }

  public Time(int hours, int minutes, int seconds) {
    elapsedTime = (((hours * 60) + minutes) * 60) + seconds;
  }

  public Time(long elapsedTime) {
    this.elapsedTime = elapsedTime;
  }

  //return current hour
  public int getHour() {
    return (int)(elapsedTime / 3600);
  }

  //return current minute
  public int getMinute() {
    return (int)(elapsedTime - (getHour() * 3600)) / 60;
  }

  //returns the current second, 0 to 59.
  public int getSecond() {
    return (int) elapsedTime - (getHour() * 3600) - (getMinute() * 60);
  }

  public long getSeconds() {
    return elapsedTime;
  }

  public int compareTo(Time obj) {
    return (int)(elapsedTime - ((Time) obj).elapsedTime);
  }

  public Time clone() {
    Time Time2 = new Time();
    Time2.elapsedTime = elapsedTime;
    return Time2;
  }

  public String toString() {
    return String.format("%d hours %d minutes %d seconds", getHour(), getMinute(), getSecond());
  }

  public boolean equals(Time T) {
    return T.elapsedTime == elapsedTime;
  }
}